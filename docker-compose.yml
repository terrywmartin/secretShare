version: "3.9"


services:

  db:
    image: postgres
    restart: always
    ports: 
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}

  app:
    container_name: app
    build: .
    environment: 
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - APP_NAME=${APP_NAME}
    env_file:
      - ./.env
    command: ./entrypoint.sh #gunicorn core.wsgi:application --bind :8000 #python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./passwordShare:/passwordShare
      - static_volumes:/staticfiles
    expose:
      - 8000
    restart: on-failure
    depends_on:
      - db
  nginx:
    container_name: nginx
    build: nginx
    ports:
      - 80:80
      #- 443:443
    restart: always
    volumes:
      - static_volumes:/staticfiles
      #- certs:/var/www/certbot/
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - app

volumes:
  postgres_data:
  static_volumes:
  certs:
  html:
  vhost:
  acme:
  